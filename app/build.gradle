apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion
    signingConfigs {
        developKey {
            keyAlias KEYALIAS
            keyPassword KEYPASSWORD
            storeFile file(STOREFILE)
            storePassword STOREPASSWORD
        }

    }
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    android.applicationVariants.all { variant ->
        // 这里修改apk文件名
        def fileName = "${releaseTime() }-Android_Retrofit+Rx_版本号-${defaultConfig.versionCode}_版本名-${defaultConfig.versionName}_${variant.buildType.name}.apk"
        variant.outputs.all { output ->
            outputFileName = fileName
        }
    }

    productFlavors{
        ID_APP{
            buildConfigField("String", "APP_CHANNEL_ID", '"APP"')
        }
//        ID_10002{
//            buildConfigField("String", "APP_CHANNEL_ID", '"10002"')
//        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.developKey
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.developKey
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    def deployDependencies = rootProject.ext.deployDependencies
    compile deployDependencies.constraint
    compile(deployDependencies.appcompat_v7) { exclude module: 'support-v4' }
    compile(deployDependencies.support_v4) { force = true }
    compile deployDependencies.constraint
    testImplementation 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':x_library')
    compile androidDependencies.butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //  retrofit2需要相关的依赖
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
}
