apply plugin: 'com.android.library'

android {
    //我只想把适合自己使用的方法加入进来，一点点来吧
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation 'junit:junit:4.12'
    def androidDependencies = rootProject.ext.androidDependencies
    // gson
    compile androidDependencies.circleimageview
    compile androidDependencies.glide
//    因为下方retrofit2中集成了gson 这里不再单独集成了
//    compile androidDependencies.gson
    compile androidDependencies.logger
    compile androidDependencies.butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //    规范安卓UI响应 以RxJava的形式来处理UI事件
//    compile androidDependencies.rxbinding
    compile deployDependencies.design
    //  retrofit2需要相关的依赖
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'


}
